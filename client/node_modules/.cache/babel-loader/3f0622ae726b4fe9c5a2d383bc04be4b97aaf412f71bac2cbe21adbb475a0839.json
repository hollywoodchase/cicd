{"ast":null,"code":"var _jsxFileName = \"/Users/sdpadmin/Desktop/repos/cicd/client/src/App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Fetch data from your Node.js server when the component mounts\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      // Make a GET request to your Node.js server endpoint\n      const response = await axios.get('/api/users');\n\n      // Set the retrieved data to the state\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your React/Node.js/PostgreSQL App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - \", user.email]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","users","setUsers","fetchUsers","response","get","data","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","email","id","_c","$RefreshReg$"],"sources":["/Users/sdpadmin/Desktop/repos/cicd/client/src/App.js"],"sourcesContent":["// client/src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from your Node.js server when the component mounts\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      // Make a GET request to your Node.js server endpoint\n      const response = await axios.get('/api/users');\n\n      // Set the retrieved data to the state\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Your React/Node.js/PostgreSQL App</h1>\n      <ul>\n        {users.map((user) => (\n          <li key={user.id}>\n            {user.name} - {user.email}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,YAAY,CAAC;;MAE9C;MACAH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvD;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1ChB,OAAA;MAAAY,QAAA,EACGT,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdlB,OAAA;QAAAY,QAAA,GACGM,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,KAAK;MAAA,GADlBF,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACd,EAAA,CAhCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}