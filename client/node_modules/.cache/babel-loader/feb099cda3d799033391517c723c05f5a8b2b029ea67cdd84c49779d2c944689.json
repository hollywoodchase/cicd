{"ast":null,"code":"var _jsxFileName = \"/Users/sdpadmin/Desktop/repos/cicd/client/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { uploadFile, listObjects, downloadFile } from \"./services/S3Service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3Component = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [file, setFile] = useState(null);\n  const [bucketObjects, setBucketObjects] = useState([]);\n  const [downloadedFile, setDownloadedFile] = useState(\"\");\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    _s();\n    try {\n      let test = useFetch(\"http://localhost:3000/blogs/\" + id)(\"/api/sample\").then(response => response.json()).then(data => {\n        console.log(\"TEST0\");\n        console.log(data);\n      }).catch(error => console.error(\"Error:\", error));\n      console.log(\"TEST1\");\n      console.log(test);\n      if (file) {\n        console.log(\"TEST2\");\n        console.log(file);\n        // await uploadFile(file, 'bqcket100', 'images', file.name);\n        // Optionally, you can update the UI or perform other actions after uploading.\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  _s(handleUpload, \"WM4OL7CqgzjgXHJL6SXd6kRTA8w=\", true);\n  const handleListObjects = async () => {\n    try {\n      const response = await listObjects(\"YOUR_BUCKET_NAME\");\n      setBucketObjects(response.Contents || []);\n    } catch (error) {\n      console.error(\"Error listing objects:\", error);\n    }\n  };\n  const handleDownload = async key => {\n    try {\n      const response = await downloadFile(\"YOUR_BUCKET_NAME\", key);\n      // `response.Body` contains the downloaded file data\n      // Handle the downloaded file data as needed, e.g., display or save it\n      setDownloadedFile(response.Body.toString());\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleListObjects,\n      children: \"List Objects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), bucketObjects.map(object => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: object.Key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDownload(object.Key),\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, object.Key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), downloadedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Downloaded File: \", downloadedFile]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(S3Component, \"X21nMXojokRqFOV49CMaBQYdX1o=\");\n_c = S3Component;\nexport default S3Component;\nvar _c;\n$RefreshReg$(_c, \"S3Component\");","map":{"version":3,"names":["React","useState","uploadFile","listObjects","downloadFile","jsxDEV","_jsxDEV","S3Component","_s2","_s","$RefreshSig$","file","setFile","bucketObjects","setBucketObjects","downloadedFile","setDownloadedFile","handleFileChange","event","target","files","handleUpload","test","useFetch","id","then","response","json","data","console","log","catch","error","handleListObjects","Contents","handleDownload","key","Body","toString","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","object","Key","_c","$RefreshReg$"],"sources":["/Users/sdpadmin/Desktop/repos/cicd/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { uploadFile, listObjects, downloadFile } from \"./services/S3Service\";\n\nconst S3Component = () => {\n  const [file, setFile] = useState(null);\n  const [bucketObjects, setBucketObjects] = useState([]);\n  const [downloadedFile, setDownloadedFile] = useState(\"\");\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    try {\n      let test = useFetch(\"http://localhost:3000/blogs/\" + id)(\"/api/sample\")\n        .then((response) => response.json())\n        .then((data) =>  {\n          console.log(\"TEST0\")\n          console.log(data)\n        })\n        .catch((error) => console.error(\"Error:\", error));\n        console.log(\"TEST1\")\n        console.log(test)\n      if (file) {\n        console.log(\"TEST2\")\n        console.log(file)\n        // await uploadFile(file, 'bqcket100', 'images', file.name);\n        // Optionally, you can update the UI or perform other actions after uploading.\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n\n  const handleListObjects = async () => {\n    try {\n      const response = await listObjects(\"YOUR_BUCKET_NAME\");\n      setBucketObjects(response.Contents || []);\n    } catch (error) {\n      console.error(\"Error listing objects:\", error);\n    }\n  };\n\n  const handleDownload = async (key) => {\n    try {\n      const response = await downloadFile(\"YOUR_BUCKET_NAME\", key);\n      // `response.Body` contains the downloaded file data\n      // Handle the downloaded file data as needed, e.g., display or save it\n      setDownloadedFile(response.Body.toString());\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n      <button onClick={handleListObjects}>List Objects</button>\n\n      {bucketObjects.map((object) => (\n        <div key={object.Key}>\n          <span>{object.Key}</span>\n          <button onClick={() => handleDownload(object.Key)}>Download</button>\n        </div>\n      ))}\n\n      {downloadedFile && <div>Downloaded File: {downloadedFile}</div>}\n    </div>\n  );\n};\n\nexport default S3Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}