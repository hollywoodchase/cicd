{"ast":null,"code":"var _jsxFileName = \"/Users/sdpadmin/Desktop/repos/cicd/client/src/components/Form.js\",\n  _s = $RefreshSig$();\n// client/src/components/Form.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    lastname: '',\n    firstname: '',\n    email: '',\n    typeofproject: '',\n    image1: '',\n    image2: '',\n    image3: '',\n    size: '',\n    description: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Make a POST request to your Node.js server endpoint\n      const response = await axios.post('/api/your-endpoint', formData);\n\n      // Handle the response as needed\n      console.log('Server response:', response.data);\n    } catch (error) {\n      console.error('Error submitting form:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastname\",\n        value: formData.lastname,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"j9RNAAMVofvXHZFK2yYtKa0ubQo=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","lastname","firstname","email","typeofproject","image1","image2","image3","size","description","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","response","post","console","log","data","error","message","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sdpadmin/Desktop/repos/cicd/client/src/components/Form.js"],"sourcesContent":["// client/src/components/Form.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Form = () => {\n  const [formData, setFormData] = useState({\n    lastname: '',\n    firstname: '',\n    email: '',\n    typeofproject: '',\n    image1: '',\n    image2: '',\n    image3: '',\n    size: '',\n    description: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Make a POST request to your Node.js server endpoint\n      const response = await axios.post('/api/your-endpoint', formData);\n\n      // Handle the response as needed\n      console.log('Server response:', response.data);\n    } catch (error) {\n      console.error('Error submitting form:', error.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* Add input fields for each column in your PostgreSQL table */}\n      <label>\n        Last Name:\n        <input type=\"text\" name=\"lastname\" value={formData.lastname} onChange={handleChange} />\n      </label>\n      {/* Add other input fields similarly */}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Form;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,EAAE;IACjBC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCd,WAAW,CAAEe,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,oBAAoB,EAAEpB,QAAQ,CAAC;;MAEjE;MACAqB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACxD;EACF,CAAC;EAED,oBACE5B,OAAA;IAAM6B,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAE3B9B,OAAA;MAAA8B,QAAA,GAAO,YAEL,eAAA9B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEd,QAAQ,CAACE,QAAS;QAAC2B,QAAQ,EAAElB;MAAa;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAERpC,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAClC,EAAA,CA3CID,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}