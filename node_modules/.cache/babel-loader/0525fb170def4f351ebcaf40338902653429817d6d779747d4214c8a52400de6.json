{"ast":null,"code":"var _jsxFileName = \"/Users/sdpadmin/Desktop/repos/cicd/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile, listObjects, downloadFile } from './services/S3Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3Component = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [bucketObjects, setBucketObjects] = useState([]);\n  const [downloadedFile, setDownloadedFile] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    try {\n      if (file) {\n        await uploadFile(file, 'bqcket100', 'images', file.name);\n        // Optionally, you can update the UI or perform other actions after uploading.\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const handleListObjects = async () => {\n    try {\n      const response = await listObjects('YOUR_BUCKET_NAME');\n      setBucketObjects(response.Contents || []);\n    } catch (error) {\n      console.error('Error listing objects:', error);\n    }\n  };\n  const handleDownload = async key => {\n    try {\n      const response = await downloadFile('YOUR_BUCKET_NAME', key);\n      // `response.Body` contains the downloaded file data\n      // Handle the downloaded file data as needed, e.g., display or save it\n      setDownloadedFile(response.Body.toString());\n    } catch (error) {\n      console.error('Error downloading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleListObjects,\n      children: \"List Objects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), bucketObjects.map(object => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: object.Key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDownload(object.Key),\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, object.Key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), downloadedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Downloaded File: \", downloadedFile]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(S3Component, \"NqbUvFgeuO5zQSFIz5zxMiNSo0Q=\");\n_c = S3Component;\nexport default S3Component;\nvar _c;\n$RefreshReg$(_c, \"S3Component\");","map":{"version":3,"names":["React","useState","uploadFile","listObjects","downloadFile","jsxDEV","_jsxDEV","S3Component","_s","file","setFile","bucketObjects","setBucketObjects","downloadedFile","setDownloadedFile","handleFileChange","event","target","files","handleUpload","name","error","console","handleListObjects","response","Contents","handleDownload","key","Body","toString","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","object","Key","_c","$RefreshReg$"],"sources":["/Users/sdpadmin/Desktop/repos/cicd/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { uploadFile, listObjects, downloadFile } from './services/S3Service';\n\nconst S3Component = () => {\n  const [file, setFile] = useState(null);\n  const [bucketObjects, setBucketObjects] = useState([]);\n  const [downloadedFile, setDownloadedFile] = useState('');\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    try {\n      if (file) {\n        await uploadFile(file, 'bqcket100', 'images', file.name);\n        // Optionally, you can update the UI or perform other actions after uploading.\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n  const handleListObjects = async () => {\n    try {\n      const response = await listObjects('YOUR_BUCKET_NAME');\n      setBucketObjects(response.Contents || []);\n    } catch (error) {\n      console.error('Error listing objects:', error);\n    }\n  };\n\n  const handleDownload = async (key) => {\n    try {\n      const response = await downloadFile('YOUR_BUCKET_NAME', key);\n      // `response.Body` contains the downloaded file data\n      // Handle the downloaded file data as needed, e.g., display or save it\n      setDownloadedFile(response.Body.toString());\n    } catch (error) {\n      console.error('Error downloading file:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n      <button onClick={handleListObjects}>List Objects</button>\n\n      {bucketObjects.map((object) => (\n        <div key={object.Key}>\n          <span>{object.Key}</span>\n          <button onClick={() => handleDownload(object.Key)}>Download</button>\n        </div>\n      ))}\n\n      {downloadedFile && <div>Downloaded File: {downloadedFile}</div>}\n    </div>\n  );\n};\n\nexport default S3Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}